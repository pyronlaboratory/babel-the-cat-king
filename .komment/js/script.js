{"name":"script.js","path":"js/script.js","content":{"structured":{"description":"","image":{"message":"Source not found"},"items":[{"id":"7e8687f9-c9b9-46b0-aec8-7e6755ecc40a","ancestors":[],"type":"function","name":"initScreenAnd3D","location":{"offset":" ","indent":0,"start":25,"insert":25},"code":"function initScreenAnd3D() {\n  \n  HEIGHT = window.innerHeight;\n  WIDTH = window.innerWidth;\n  windowHalfX = WIDTH / 2;\n  windowHalfY = HEIGHT / 2;\n\n  scene = new THREE.Scene();\n  aspectRatio = WIDTH / HEIGHT;\n  fieldOfView = 50;\n  nearPlane = 1;\n  farPlane = 2000;\n  camera = new THREE.PerspectiveCamera(\n    fieldOfView,\n    aspectRatio,\n    nearPlane,\n    farPlane\n    );\n  camera.position.x = 0;\n  camera.position.z = 300;\n  camera.position.y = 250;\n  camera.lookAt(new THREE.Vector3(0, 60, 0));\n\n  renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\n  renderer.setPixelRatio( window.devicePixelRatio );\n  renderer.setSize(WIDTH, HEIGHT);\n  renderer.shadowMapEnabled = true;\n  \n  container = document.getElementById('world');\n  container.appendChild(renderer.domElement);\n  \n  window.addEventListener('resize', handleWindowResize, false);\n  document.addEventListener('mousemove', handleMouseMove, false);\n  document.addEventListener('touchmove', handleTouchMove, false);\n\n}","params":[],"returns":false,"skip":false,"jsx":false,"length":36,"comment":{"description":"sets up a Three.js scene and renderer for rendering a 3D environment. It defines camera parameters, positions, and lookAt point, and sets up event listeners for window resize, mouse move, and touch move.","params":[],"returns":null}},{"id":"fc3000d7-14d5-4cca-8292-e98d446abc26","ancestors":[],"type":"function","name":"handleWindowResize","location":{"offset":" ","indent":0,"start":64,"insert":64},"code":"function handleWindowResize() {\n  HEIGHT = window.innerHeight;\n  WIDTH = window.innerWidth;\n  windowHalfX = WIDTH / 2;\n  windowHalfY = HEIGHT / 2;\n  renderer.setSize(WIDTH, HEIGHT);\n  camera.aspect = WIDTH / HEIGHT;\n  camera.updateProjectionMatrix();\n}","params":[],"returns":false,"skip":false,"jsx":false,"length":9,"comment":{"description":"updates the size and position of the renderer and camera based on the window's inner height and width, maintaining aspect ratio.","params":[],"returns":null}},{"id":"f5c5bf09-2e53-488d-9af3-3739a4fc25d3","ancestors":[],"type":"function","name":"handleMouseMove","location":{"offset":" ","indent":0,"start":74,"insert":74},"code":"function handleMouseMove(event) {\n  mousePos = {x:event.clientX, y:event.clientY};\n}","params":[{"name":"event","value":null,"type":null}],"returns":false,"skip":false,"jsx":false,"length":3,"comment":{"description":"updates the positions of two variables `mousePos` in client coordinates with values of `event.clientX` and `event.clientY`.","params":[{"name":"event","type":"object","value":null,"description":"mouse move event that triggered the function."}],"returns":null}}]}}}